SQL> 
SQL> 
SQL> --------------------------------------------------------------------------------------------
SQL> --------------------------------------------------------------------------------------------
SQL> -- 2. Charger les requï¿½tes dans la table utilisateur user_workload
SQL> --------------------------------------------------------------------------------------------
SQL> --------------------------------------------------------------------------------------------
SQL> 
SQL> -- Si utile Suppession puis crï¿½ation de la table utilisateur
SQL> drop table user_workload;

Table supprimée.

SQL> 
SQL> 
SQL> create table user_workload(
  2  MODULE VARCHAR2(64) ,   --Nom du module applicatif.
  3  ACTION VARCHAR2(64),    -- Action sur l'application.
  4  BUFFER_GETS NUMBER default 0, --nbre total de buffer-gets pour la requï¿½te.
  5  CPU_TIME NUMBER default 0, -- Total CPU time in seconds for the statement.
  6  ELAPSED_TIME NUMBER default 0, -- Total elapsed time in seconds for the statement.
  7  DISK_READS NUMBER default 0 , --Total number of disk-read operations used
  8  				     -- by the statement.
  9  ROWS_PROCESSED NUMBER default 0, --  Total number of rows process by this
 10  				     -- SQL statement.
 11  EXECUTIONS NUMBER default 1, -- Total number of times the statement is executed.
 12  OPTIMIZER_COST NUMBER default  0, -- Optimizer's calculated cost value for
 13  					       -- executing the query.
 14  LAST_EXECUTION_DATE DATE  default SYSDATE , -- Last time the query is
 15  				     -- used. Defaults to not available.
 16  PRIORITY NUMBER default 2,      --  Must be one of the following values:
 17  				     -- 1- HIGH, 2- MEDIUM, or 3- LOW
 18  SQL_TEXT CLOB,	     --  or LONG or VARCHAR2
 19  				     -- None The SQL statement. This is a required		     -- column.
 20  STAT_PERIOD NUMBER default 1 ,
 21  -- Period of time that corresponds to the execution statistics in seconds.
 22  USERNAME VARCHAR(30) default user
 23  --Current user User submitting the query. This is a required column.
 24  );

Table créée.

SQL> 
SQL> -- chargement des requï¿½tes dans cette table
SQL> -- aggregation with selection
SQL> 
SQL> -- SÃ©lectionner le nom et le numÃ©ro d'immatriculation des voitures de la marque Audi
SQL> INSERT INTO user_workload (username, module, action, priority, sql_text)
  2  VALUES ('&MYPDBUSER', 'Example1', 'Action', 2,
  3  ' select nom, immatriculation from immatriculation
  4  WHERE marque = ''Audi''')
  5  /
ancien   2 : VALUES ('&MYPDBUSER', 'Example1', 'Action', 2,
nouveau   2 : VALUES ('PROJET_TUNING', 'Example1', 'Action', 2,

1 ligne créée.

SQL> 
SQL> -- SÃ©lectionner les clients de plus de 50 ans
SQL>  INSERT INTO user_workload (username, module, action, priority, sql_text)
  2  VALUES ('&MYPDBUSER', 'Example2', 'Action', 2,
  3  ' select * from client
  4  WHERE age > 50');
ancien   2 : VALUES ('&MYPDBUSER', 'Example2', 'Action', 2,
nouveau   2 : VALUES ('PROJET_TUNING', 'Example2', 'Action', 2,

1 ligne créée.

SQL> 
SQL> -- SÃ©lectionner les vÃ©hicules du catalogue qui ont dÃ©jÃ  Ã©tÃ© immatriculÃ©s en tant que vÃ©hicules d'occasion
SQL> INSERT INTO user_workload (username, module, action, priority, sql_text)
  2  VALUES ('&MYPDBUSER', 'Example3', 'Action', 2,
  3  ' SELECT *
  4  FROM catalogue
  5  JOIN immatriculation
  6  ON catalogue.marque = immatriculation.marque
  7  WHERE immatriculation.occasion = ''VRAI''');
ancien   2 : VALUES ('&MYPDBUSER', 'Example3', 'Action', 2,
nouveau   2 : VALUES ('PROJET_TUNING', 'Example3', 'Action', 2,

1 ligne créée.

SQL> 
SQL> -- SÃ©lectionner la couleur des Golf 2.0 FSI vendues Ã  des hommes
SQL>  INSERT INTO user_workload (username, module, action, priority, sql_text)
  2   VALUES ('&MYPDBUSER', 'Example4', 'Action', 2,
  3  ' SELECT DISTINCT catalogue.couleur
  4  FROM catalogue
  5  JOIN immatriculation
  6  ON  immatriculation.nom = catalogue.nom
  7  JOIN client
  8  ON client.immatriculation = immatriculation.immatriculation
  9  WHERE client.sexe=''M'' AND catalogue.nom = ''Golf 2.0 FSI''');
ancien   2 :  VALUES ('&MYPDBUSER', 'Example4', 'Action', 2,
nouveau   2 :  VALUES ('PROJET_TUNING', 'Example4', 'Action', 2,

1 ligne créée.

SQL> 
SQL> -- SÃ©lectionner les clients qui ont le mÃªme taux que les potentiels client qui veulent acheter une deuxiÃ¨me voiture
SQL>  INSERT INTO user_workload (username, module, action, priority, sql_text)
  2   VALUES ('&MYPDBUSER', 'Example5', 'Action', 2,
  3  ' SELECT *
  4  FROM client
  5  JOIN marketing
  6  ON client.taux = marketing.taux
  7  WHERE marketing.deuxiemeVoiture = ''true''');
ancien   2 :  VALUES ('&MYPDBUSER', 'Example5', 'Action', 2,
nouveau   2 :  VALUES ('PROJET_TUNING', 'Example5', 'Action', 2,

1 ligne créée.

SQL> 
SQL> -- SÃ©lectionner le numÃ©ro d'immatriculation des voitures dont le modÃ¨le est Laguna 2.0T
SQL>  INSERT INTO user_workload (username, module, action, priority, sql_text)
  2   VALUES ('&MYPDBUSER', 'Example6', 'Action', 2,
  3  ' SELECT immatriculation
  4  FROM immatriculation
  5  JOIN catalogue
  6  ON catalogue.nom = immatriculation.nom
  7  WHERE catalogue.nom=''Laguna 2.0T''');
ancien   2 :  VALUES ('&MYPDBUSER', 'Example6', 'Action', 2,
nouveau   2 :  VALUES ('PROJET_TUNING', 'Example6', 'Action', 2,

1 ligne créée.

SQL> 
SQL> -- SÃ©lectionner l'Ã¢ge des clients ayant achetÃ© une voiture rouge
SQL> INSERT INTO user_workload (username, module, action, priority, sql_text)
  2   VALUES ('&MYPDBUSER', 'Example7', 'Action', 2,
  3  ' SELECT  DISTINCT client.age
  4  FROM client
  5  JOIN immatriculation
  6  ON client.immatriculation=immatriculation.immatriculation
  7  JOIN catalogue
  8  ON catalogue.marque=immatriculation.marque
  9  WHERE catalogue.couleur = ''rouge''');
ancien   2 :  VALUES ('&MYPDBUSER', 'Example7', 'Action', 2,
nouveau   2 :  VALUES ('PROJET_TUNING', 'Example7', 'Action', 2,

1 ligne créée.

SQL> 
SQL> -- SÃ©lectionner la puissance et la marque des vÃ©hicules de plus de 150CV vendus, triÃ©s par l'Ã¢ge dÃ©croissant de leur acheteur
SQL> INSERT INTO user_workload (username, module, action, priority, sql_text)
  2  VALUES ('&MYPDBUSER', 'Example8', 'Action', 2,
  3  ' SELECT DISTINCT immatriculation.puissance, immatriculation.marque
  4  FROM immatriculation
  5  JOIN catalogue
  6  ON immatriculation.marque = catalogue.marque
  7  JOIN client
  8  ON immatriculation.immatriculation = client.immatriculation
  9  WHERE immatriculation.puissance > 150
 10  ORDER BY client.age DESC');
ancien   2 : VALUES ('&MYPDBUSER', 'Example8', 'Action', 2,
nouveau   2 : VALUES ('PROJET_TUNING', 'Example8', 'Action', 2,

1 ligne créée.

SQL> 
SQL> 
SQL> 
SQL> commit;

Validation effectuée.

SQL> --calcul des statistiques
SQL> execute dbms_stats.gather_schema_stats('&MYPDBUSER');

Procédure PL/SQL terminée avec succès.

SQL> 
SQL> --------------------------------------------------------------------------------------------
SQL> --------------------------------------------------------------------------------------------
SQL> -- 3. Analyser les requï¿½tes et produire les recommandations
SQL> --------------------------------------------------------------------------------------------
SQL> --------------------------------------------------------------------------------------------
SQL> 
SQL> 
SQL> -- programmation de tache Sql access advisor
SQL> set serveroutput on
SQL> 
SQL> -- fixer les spï¿½rateurs de nombre en Anglais. "," pour les dï¿½cimaux et "." pour les groupes
SQL> 
SQL> -- Anglais
SQL> alter session set NLS_NUMERIC_CHARACTERS = '.,' ;

Session modifiée.

SQL> 
SQL> -- Francais
SQL> -- alter session set NLS_NUMERIC_CHARACTERS = ',.'  ;
SQL> execute DBMS_ADVISOR.DELETE_TASK ('TASK'||'&MYPDBUSER');

Procédure PL/SQL terminée avec succès.

SQL> declare
  2  saved_stmts NUMBER;
  3  failed_stmts NUMBER;
  4  wkld_name VARCHAR2(30) :='WKLD'||'&MYPDBUSER';
  5  taskname VARCHAR2(30) := 'TASK'||'&MYPDBUSER';
  6  task_id NUMBER;
  7  num_found NUMBER:=0;
  8  Begin
  9  -- dï¿½tacher la tache et le workload
 10  select count(*) into num_found
 11  from user_advisor_sqla_wk_map
 12  where task_name = taskname and workload_name = wkld_name;
 13  IF num_found > 0 THEN
 14  DBMS_ADVISOR.RESET_TASK (taskname);
 15  DBMS_ADVISOR.DELETE_SQLWKLD_REF(taskname, wkld_name);
 16  END IF;
 17  dbms_output.put_line('Dans SQL access advisor : 1############################################');
 18  
 19  -- suppression puis crï¿½ation de la t
 20  select count(*) into num_found
 21  from dba_advisor_tasks
 22  where owner='&MYPDBUSER' and task_name=taskname;
 23  
 24  IF num_found > 0 THEN
 25  DBMS_ADVISOR.DELETE_TASK (taskname);
 26  END IF;
 27  DBMS_ADVISOR.CREATE_TASK ('SQL Access Advisor', task_id, taskname);
 28  dbms_output.put_line('Dans SQL access advisor : 2############################################');
 29  
 30  -- suppression et puis crï¿½ation du workload
 31  select count(*) into num_found
 32  from user_advisor_sqlw_sum
 33  where workload_name = wkld_name;
 34  IF num_found > 0 THEN
 35  DBMS_ADVISOR.DELETE_SQLWKLD(workload_name=> wkld_name);
 36  END IF;
 37  DBMS_ADVISOR.CREATE_SQLWKLD (wkld_name);
 38  dbms_output.put_line('Dans SQL access advisor : 3############################################');
 39  
 40  -- chargement du workload
 41  DBMS_ADVISOR.IMPORT_SQLWKLD_USER(
 42  workload_name=> wkld_name,import_mode=>'NEW', owner_name=>'&MYPDBUSER',
 43  table_name=>'USER_WORKLOAD', Saved_rows=>saved_stmts,
 44  Failed_rows=>failed_stmts);
 45  dbms_output.put_line(' saved_stmts='||saved_stmts);
 46  dbms_output.put_line(' failed_stmts='||failed_stmts);
 47  -- Attacher le workload ï¿½ une tï¿½che
 48  /* Link Workload to Task */
 49  dbms_advisor.add_sqlwkld_ref(taskname,wkld_name);
 50  dbms_output.put_line('Dans SQL access advisor : 4############################################');
 51  
 52  --Mise ï¿½ jour de paramï¿½tres de la tï¿½che
 53  dbms_advisor.set_task_parameter(taskname,'EXECUTION_TYPE','INDEX_ONLY');--'FULL');--'INDEX_ONLY');
 54  dbms_advisor.set_task_parameter(taskname,'MODE','COMPREHENSIVE');
 55  
 56  -- exï¿½cuter la tï¿½che
 57  DBMS_ADVISOR.EXECUTE_TASK(taskname);
 58  dbms_output.put_line('Dans SQL access advisor : 5############################################');
 59  
 60  Exception
 61  When others then
 62  dbms_output.put_line(' SQLcode='||sqlcode);
 63  dbms_output.put_line(' SQLerrm='||sqlerrm);
 64  End;
 65  /
ancien   4 : wkld_name VARCHAR2(30) :='WKLD'||'&MYPDBUSER';
nouveau   4 : wkld_name VARCHAR2(30) :='WKLD'||'PROJET_TUNING';
ancien   5 : taskname VARCHAR2(30) := 'TASK'||'&MYPDBUSER';
nouveau   5 : taskname VARCHAR2(30) := 'TASK'||'PROJET_TUNING';
ancien  22 : where owner='&MYPDBUSER' and task_name=taskname;
nouveau  22 : where owner='PROJET_TUNING' and task_name=taskname;
ancien  42 : workload_name=> wkld_name,import_mode=>'NEW', owner_name=>'&MYPDBUSER',
nouveau  42 : workload_name=> wkld_name,import_mode=>'NEW', owner_name=>'PROJET_TUNING',
Dans SQL access advisor : 1############################################                                                                                                                                 
Dans SQL access advisor : 2############################################                                                                                                                                 
Dans SQL access advisor : 3############################################                                                                                                                                 
saved_stmts=7                                                                                                                                                                                           
failed_stmts=1                                                                                                                                                                                          
Dans SQL access advisor : 4############################################                                                                                                                                 
Dans SQL access advisor : 5############################################                                                                                                                                 

Procédure PL/SQL terminée avec succès.

SQL> 
SQL> --------------------------------------------------------------------------------------------
SQL> --------------------------------------------------------------------------------------------
SQL> -- 4. Consulter les recommandations
SQL> --------------------------------------------------------------------------------------------
SQL> --------------------------------------------------------------------------------------------
SQL> 
SQL> -- Consulter les requï¿½tes de rï¿½fï¿½rence que va rï¿½gler SAA
SQL> col WORKLOAD_NAME format a20
SQL> col SQL_TEXT format a70
SQL> set linesize 200
SQL> set pagesize 400
SQL> select WORKLOAD_NAME, sql_id, SQL_TEXT from DBA_ADVISOR_SQLW_STMTS
  2  Where workload_name= 'WKLD'||'&MYPDBUSER'
  3  order by sql_id;
ancien   2 : Where workload_name= 'WKLD'||'&MYPDBUSER'
nouveau   2 : Where workload_name= 'WKLD'||'PROJET_TUNING'

WORKLOAD_NAME            SQL_ID SQL_TEXT                                                                                                                                                                
-------------------- ---------- ----------------------------------------------------------------------                                                                                                  
WKLDPROJET_TUNING            76  select nom, immatriculation from immatriculation                                                                                                                       
                                WHERE marque = 'Audi'                                                                                                                                                   
                                                                                                                                                                                                        
WKLDPROJET_TUNING            77  select * from client                                                                                                                                                   
                                WHERE age > 50                                                                                                                                                          
                                                                                                                                                                                                        
WKLDPROJET_TUNING            78  SELECT *                                                                                                                                                               
                                FROM catalogue                                                                                                                                                          
                                JOIN immatriculation                                                                                                                                                    
                                ON catalogue.marque = immatriculation.marque                                                                                                                            
                                WHERE immatriculation.occasion = 'VRAI'                                                                                                                                 
                                                                                                                                                                                                        
WKLDPROJET_TUNING            79  SELECT DISTINCT catalogue.couleur                                                                                                                                      
                                FROM catalogue                                                                                                                                                          
                                JOIN immatriculation                                                                                                                                                    
                                ON  immatriculation.nom = catalogue.nom                                                                                                                                 
                                JOIN client                                                                                                                                                             
                                ON client.immatriculation = immatriculation.immatriculation                                                                                                             
                                WHERE client.sexe='M' AND catalogue.nom = 'Golf 2.0 FSI'                                                                                                                
                                                                                                                                                                                                        
WKLDPROJET_TUNING            80  SELECT *                                                                                                                                                               
                                FROM client                                                                                                                                                             
                                JOIN marketing                                                                                                                                                          
                                ON client.taux = marketing.taux                                                                                                                                         
                                WHERE marketing.deuxiemeVoiture = 'true'                                                                                                                                
                                                                                                                                                                                                        
WKLDPROJET_TUNING            81  SELECT immatriculation                                                                                                                                                 
                                FROM immatriculation                                                                                                                                                    
                                JOIN catalogue                                                                                                                                                          
                                ON catalogue.nom = immatriculation.nom                                                                                                                                  
                                WHERE catalogue.nom='Laguna 2.0T'                                                                                                                                       
                                                                                                                                                                                                        
WKLDPROJET_TUNING            82  SELECT  DISTINCT client.age                                                                                                                                            
                                FROM client                                                                                                                                                             
                                JOIN immatriculation                                                                                                                                                    
                                ON client.immatriculation=immatriculation.immatriculation                                                                                                               
                                JOIN catalogue                                                                                                                                                          
                                ON catalogue.marque=immatriculation.marque                                                                                                                              
                                WHERE catalogue.couleur = 'rouge'                                                                                                                                       
                                                                                                                                                                                                        

7 lignes sélectionnées.

SQL> 
SQL> 
SQL> -- Visualisation des recommandations
SQL> -- Affiche du nr de recommandation, le rang et le bï¿½nï¿½fice de
SQL> -- la recommandation
SQL> 
SQL> SELECT REC_ID, RANK, BENEFIT, type
  2  FROM USER_ADVISOR_RECOMMENDATIONS WHERE TASK_NAME = 'TASK'||'&MYPDBUSER';
ancien   2 : FROM USER_ADVISOR_RECOMMENDATIONS WHERE TASK_NAME = 'TASK'||'&MYPDBUSER'
nouveau   2 : FROM USER_ADVISOR_RECOMMENDATIONS WHERE TASK_NAME = 'TASK'||'PROJET_TUNING'

    REC_ID       RANK    BENEFIT TYPE                                                                                                                                                                   
---------- ---------- ---------- ------------------------------                                                                                                                                         
         1          1       2582 ACTIONS                                                                                                                                                                
         2          2       2535 ACTIONS                                                                                                                                                                
         3          3         54 ACTIONS                                                                                                                                                                

SQL> 
SQL> -- Visualisation des recommandations
SQL> -- Afficher des recommandations et des bï¿½nï¿½fices
SQL> -- par requï¿½tes
SQL> 
SQL> SELECT sql_id, rec_id, precost, postcost,
  2  (precost-postcost)*100/precost AS percent_benefit
  3  FROM USER_ADVISOR_SQLA_WK_STMTS
  4  WHERE TASK_NAME = 'TASK'||'&MYPDBUSER'
  5  AND workload_name = 'WKLD'||'&MYPDBUSER';
ancien   4 : WHERE TASK_NAME = 'TASK'||'&MYPDBUSER'
nouveau   4 : WHERE TASK_NAME = 'TASK'||'PROJET_TUNING'
ancien   5 : AND workload_name = 'WKLD'||'&MYPDBUSER'
nouveau   5 : AND workload_name = 'WKLD'||'PROJET_TUNING'

aucune ligne sélectionnée

SQL> 
SQL> -- Visualisation des recommandations
SQL> -- Affichage des actions recommandï¿½s :
SQL> -- Comptage des actions recommandï¿½es
SQL> 
SQL> 
SQL> SELECT 'Action Count', COUNT(DISTINCT action_id) cnt
  2  FROM user_advisor_actions
  3  WHERE task_name = 'TASK'||'&MYPDBUSER';
ancien   3 : WHERE task_name = 'TASK'||'&MYPDBUSER'
nouveau   3 : WHERE task_name = 'TASK'||'PROJET_TUNING'

'ACTIONCOUNT        CNT                                                                                                                                                                                 
------------ ----------                                                                                                                                                                                 
Action Count          4                                                                                                                                                                                 

SQL> 
SQL> 
SQL> 
SQL> -- Visualisation des recommandations
SQL> -- Affichage des actions recommandï¿½s :
SQL> -- Liste des actions recommandï¿½es
SQL> 
SQL> 
SQL> Col command format A30
SQL> Col attr1 format A40
SQL> Set long 500
SQL> SELECT rec_id, action_id, command, attr1
  2  FROM user_advisor_actions
  3  WHERE task_name = 'TASK'||'&MYPDBUSER'
  4  ORDER BY rec_id, action_id;
ancien   3 : WHERE task_name = 'TASK'||'&MYPDBUSER'
nouveau   3 : WHERE task_name = 'TASK'||'PROJET_TUNING'

    REC_ID  ACTION_ID COMMAND                        ATTR1                                                                                                                                              
---------- ---------- ------------------------------ ----------------------------------------                                                                                                           
         1          1 CREATE INDEX                   "PROJET_TUNING"."IMMATRICULATION_IDX$$_0                                                                                                           
                                                     05B0000"                                                                                                                                           
                                                                                                                                                                                                        
         2          1 CREATE INDEX                   "PROJET_TUNING"."IMMATRICULATION_IDX$$_0                                                                                                           
                                                     05B0000"                                                                                                                                           
                                                                                                                                                                                                        
         2          2 CREATE INDEX                   "PROJET_TUNING"."CATALOGUE_IDX$$_005B000                                                                                                           
                                                     1"                                                                                                                                                 
                                                                                                                                                                                                        
         3          3 CREATE INDEX                   "PROJET_TUNING"."MARKETING_IDX$$_005B000                                                                                                           
                                                     2"                                                                                                                                                 
                                                                                                                                                                                                        
         3          4 CREATE INDEX                   "PROJET_TUNING"."CLIENT_IDX$$_005B0003"                                                                                                            

SQL> 
SQL> 
SQL> -- Visualisation des recommandations
SQL> -- Gï¿½nï¿½ration des scripts SQL
SQL> -- Afin d'implï¿½menter les recommandations il est possible de
SQL> -- gï¿½nï¿½rer des scripts
SQL> 
SQL> -- La fonction GET_TASK_SCRIPT construire le script
SQL> set serveroutput on
SQL> begin
  2  dbms_output.put_line(DBMS_ADVISOR.GET_TASK_SCRIPT('TASK'||'&MYPDBUSER'));
  3  end;
  4  /
ancien   2 : dbms_output.put_line(DBMS_ADVISOR.GET_TASK_SCRIPT('TASK'||'&MYPDBUSER'));
nouveau   2 : dbms_output.put_line(DBMS_ADVISOR.GET_TASK_SCRIPT('TASK'||'PROJET_TUNING'));
Rem  SQL Access Advisor : Version 19.0.0.0.0 - Production
Rem  
Rem  Nom utilisateur :    PROJET_TUNING
Rem  Tâche :             TASKPROJET_TUNING
Rem  Date d'exécution :   
Rem  

CREATE INDEX       
"PROJET_TUNING"."IMMATRICULATION_IDX$$_005B0000"
    ON "PROJET_TUNING"."IMMATRICULATION"
    ("NOM","IMMATRICULATION")
    COMPUTE STATISTICS;

CREATE INDEX                                           
"PROJET_TUNING"."CATALOGUE_IDX$$_005B0001"
    ON "PROJET_TUNING"."CATALOGUE"
    ("NOM","COULEUR")
    COMPUTE STATISTICS;

CREATE INDEX "PROJET_TUNING"."MARKETING_IDX$$_005B0002"
    ON             
"PROJET_TUNING"."MARKETING"
    ("DEUXIEMEVOITURE")
    COMPUTE STATISTICS;

CREATE INDEX "PROJET_TUNING"."CLIENT_IDX$$_005B0003"
    ON "PROJET_TUNING"."CLIENT"
    ("TAUX")
    COMPUTE STATISTICS;



Procédure PL/SQL terminée avec succès.

SQL> 
SQL> -- La fonction CREATE_FILE permet de crï¿½er le fichier
SQL> -- contenant le script
SQL> declare
  2  mydate varchar2(20):=to_char(sysdate, 'DD_MM_YYYY_HH24_MI_SS');
  3  fname varchar2(300):='SAA_Generate_script_on_Projet_TUNING_app_'||mydate||'.sql';
  4  begin
  5  dbms_output.put_line(fname);
  6  DBMS_ADVISOR.CREATE_FILE(
  7  buffer=>DBMS_ADVISOR.GET_TASK_SCRIPT('TASK'||'&MYPDBUSER'),
  8  location =>'DATA_PUMP_DIR',
  9   filename=>fname
 10  );
 11  end;
 12  /
ancien   7 : buffer=>DBMS_ADVISOR.GET_TASK_SCRIPT('TASK'||'&MYPDBUSER'),
nouveau   7 : buffer=>DBMS_ADVISOR.GET_TASK_SCRIPT('TASK'||'PROJET_TUNING'),
SAA_Generate_script_on_Projet_TUNING_app_01_03_2021_16_13_17.sql                                                                                                                                        

Procédure PL/SQL terminée avec succès.

SQL> 
SQL> spool off
